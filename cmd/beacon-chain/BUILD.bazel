load("@prysm//tools/go:def.bzl", "go_library", "go_test")
load("@io_bazel_rules_go//go:def.bzl", "go_binary")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_bundle", "container_image")
load("//tools:go_image.bzl", "go_image_alpine", "go_image_debug")
load("@io_bazel_rules_docker//contrib:push-all.bzl", "docker_push")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_image_index", "oci_push")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("//tools:multi_arch.bzl", "multi_arch")
load("//tools:prysm_image.bzl", "prysm_image_upload")

go_library(
    name = "go_default_library",
    srcs = [
        "log.go",
        "main.go",
        "usage.go",
    ],
    importpath = "github.com/prysmaticlabs/prysm/v4/cmd/beacon-chain",
    visibility = ["//beacon-chain:__subpackages__"],
    deps = [
        "//beacon-chain/builder:go_default_library",
        "//beacon-chain/node:go_default_library",
        "//cmd:go_default_library",
        "//cmd/beacon-chain/blockchain:go_default_library",
        "//cmd/beacon-chain/db:go_default_library",
        "//cmd/beacon-chain/execution:go_default_library",
        "//cmd/beacon-chain/flags:go_default_library",
        "//cmd/beacon-chain/jwt:go_default_library",
        "//cmd/beacon-chain/sync/checkpoint:go_default_library",
        "//cmd/beacon-chain/sync/genesis:go_default_library",
        "//config/features:go_default_library",
        "//io/file:go_default_library",
        "//io/logs:go_default_library",
        "//monitoring/journald:go_default_library",
        "//runtime/debug:go_default_library",
        "//runtime/fdlimits:go_default_library",
        "//runtime/logging/logrus-prefixed-formatter:go_default_library",
        "//runtime/maxprocs:go_default_library",
        "//runtime/tos:go_default_library",
        "//runtime/version:go_default_library",
        "@com_github_ethereum_go_ethereum//log:go_default_library",
        "@com_github_ipfs_go_log_v2//:go_default_library",
        "@com_github_joonix_log//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_urfave_cli_v2//:go_default_library",
    ],
)

go_image(
    name = "image",
    base = select({
        "//tools:base_image_alpine": "//tools:alpine_cc_image",
        "//tools:base_image_cc": "//tools:cc_image",
        "//conditions:default": "//tools:cc_image",
    }),
    binary = ":beacon-chain",
    tags = ["manual"],
    visibility = ["//beacon-chain:__pkg__"],
)

container_image(
    name = "image_with_creation_time",
    base = "image",
    tags = ["manual"],
    visibility = ["//beacon-chain:__pkg__"],
)

container_bundle(
    name = "image_bundle",
    images = {
        "staderdev/prysm/beacon-chain:latest": ":image_with_creation_time",
        "staderdev/prysm/beacon-chain:{DOCKER_TAG}": ":image_with_creation_time",
        "index.docker.io/staderdev/prysm-beacon-chain:latest": ":image_with_creation_time",
        "index.docker.io/staderdev/prysm-beacon-chain:{DOCKER_TAG}": ":image_with_creation_time",
    },
    tags = ["manual"],
    visibility = ["//beacon-chain:__pkg__"],
)

go_image_debug(
    name = "image_debug",
    image = ":image",
    tags = ["manual"],
    visibility = ["//beacon-chain:__pkg__"],
)

container_bundle(
    name = "image_bundle_debug",
    images = {
        "staderdev/prysm/beacon-chain:latest-debug": ":image_debug",
        "staderdev/prysm/beacon-chain:{DOCKER_TAG}-debug": ":image_debug",
        "index.docker.io/staderdev/prysm-beacon-chain:latest-debug": ":image_debug",
        "index.docker.io/staderdev/prysm-beacon-chain:{DOCKER_TAG}-debug": ":image_debug",
    },
    tags = ["manual"],
    visibility = ["//beacon-chain:__pkg__"],
)

go_image_alpine(
    name = "image_alpine",
    image = ":image",
    tags = ["manual"],
    visibility = ["//beacon-chain:__pkg__"],
)

container_bundle(
    name = "image_bundle_alpine",
    images = {
        "staderdev/prysm/beacon-chain:latest-alpine": ":image_alpine",
        "staderdev/prysm/beacon-chain:{DOCKER_TAG}-alpine": ":image_alpine",
        "index.docker.io/staderdev/prysm-beacon-chain:latest-alpine": ":image_alpine",
        "index.docker.io/staderdev/prysm-beacon-chain:{DOCKER_TAG}-alpine": ":image_alpine",
    },
    tags = ["manual"],
    visibility = ["//beacon-chain:__pkg__"],
)

docker_push(
    name = "push_images",
    bundle = ":image_bundle",
    tags = ["manual"],
    visibility = ["//beacon-chain:__pkg__"],
)

docker_push(
    name = "push_images_debug",
    bundle = ":image_bundle_debug",
    tags = ["manual"],
    visibility = ["//beacon-chain:__pkg__"],
)

docker_push(
    name = "push_images_alpine",
    bundle = ":image_bundle_alpine",
    tags = ["manual"],
    visibility = ["//beacon-chain:__pkg__"],
)

go_binary(
    name = "beacon-chain",
    embed = [":go_default_library"],
    visibility = [
        "//beacon-chain:__subpackages__",
        "//testing/endtoend:__pkg__",
    ],
)

go_test(
    name = "go_default_test",
    size = "small",
    srcs = ["usage_test.go"],
    embed = [":go_default_library"],
    visibility = ["//beacon-chain:__pkg__"],
    deps = [
        "//config/features:go_default_library",
        "@com_github_urfave_cli_v2//:go_default_library",
    ],
)

prysm_image_upload(
    name = "push_oci_image",
    binary = ":beacon-chain",
    entrypoint = ["/beacon-chain"],
    symlinks = {
        # Backwards compatiability for images that depended on the old filepath.
        "/app/cmd/beacon-chain/beacon-chain": "/beacon-chain" 
    },
    repository = "gcr.io/prylabs-dev/prysm/beacon-chain",
)

# pkg_tar(
#     name = "tar",
#     srcs = [
#         ":beacon-chain",
#     ],
# )

# oci_image(
#     name = "oci_image",
#     base = "@linux_debian11_multiarch_base",
#     # TODO: Add symlink to prevent additional breaking changes. The entrypoint used to be /app/cmd/beacon-chain/beacon-chain.
#     # Alternatively, use the pkg_tar package_dir to mimick the same behavior.
#     entrypoint = ["/beacon-chain"],
#     tars = [
#         "//tools:passwd_tar",
#         "//tools:bash_tar",
#         ":tar",
#     ],
# )

# multi_arch(
#     name = "multiarch",
#     image = ":oci_image",
#     platforms = [
#         "@io_bazel_rules_go//go/toolchain:linux_amd64_cgo",
#         "@io_bazel_rules_go//go/toolchain:linux_arm64_cgo",
#     ],
# )

# oci_image_index(
#     name = "index",
#     images = [
#         ":multiarch",
#     ],
# )

# oci_push(
#     name = "push_oci_image",
#     image = ":index",
#     repository = "gcr.io/prylabs-dev/prysm/beacon-chain",
# )
